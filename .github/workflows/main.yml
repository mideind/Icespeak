name: Tests

on:
  push:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        # uv v6 automatically caches dependencies on GitHub-hosted runners
        # No manual caching needed for uv packages/wheels

      - name: Set up API keys
        run: |
          # Azure TTS key
          echo '${{ secrets.AZURE_TTS_KEY }}' > keys/AzureSpeechServerKey.json
          # AWS Polly API key
          echo '${{ secrets.AWS_POLLY_KEY }}' > keys/AWSPollyServerKey.json

      - name: Run tests
        run: |
          # --locked ensures we use exact versions from uv.lock without updating
          uv run --locked pytest --run-slow -vvvrP --log-level=DEBUG --capture=tee-sys

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Check code with ruff
        run: |
          # --locked ensures we use exact versions from uv.lock without updating
          uv run --locked ruff check .

      - name: Check imports with ruff
        run: |
          # --locked ensures we use exact versions from uv.lock without updating
          uv run --locked ruff check --select I .

      - name: Check code formatting with ruff
        run: |
          # --locked ensures we use exact versions from uv.lock without updating
          uv run --locked ruff format --check .
