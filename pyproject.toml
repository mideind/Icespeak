[project]
name = "icespeak"
# Versioning is automatic (w/setuptools-scm)
dynamic = ["version"]
description = "Icespeak - Icelandic TTS library"
authors = [{ name = "MiÃ°eind ehf.", email = "mideind@mideind.is" }]
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE.txt" }
# For classifier list see: https://pypi.org/pypi?%3Aaction=list_classifiers
classifiers = [
    "Natural Language :: Icelandic",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    # Async HTTP requests, with optimization extras
    # "aiohttp[speedups]>=3.8.4",
    # Azure TTS
    "azure-cognitiveservices-speech>=1.25.0",
    # Google TTS
    "google-cloud-texttospeech>=2.14.0",
    # AWS Polly TTS
    "botocore>=1.21.40",
    "boto3>=1.18.40",
]

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.mypy]
overrides = [
    { module = "google.*", ignore_missing_imports = true },
    { module = "azure.*", ignore_missing_imports = true },
]

[tool.pyright]
typeCheckingMode = "strict"
# The following settings are off by default, even in strict mode
reportCallInDefaultInitializer = "information"
reportImplicitOverride = "information"
reportImplicitStringConcatenation = "information"
reportImportCycles = "warning"
reportMissingSuperCall = "none"
reportPropertyTypeMismatch = "warning"
reportShadowedImports = "warning"
reportUninitializedInstanceVariable = "information"
reportUnnecessaryTypeIgnoreComment = "information"
reportUnusedCallResult = "none"

[tool.ruff]
# See https://beta.ruff.rs/docs/rules/ for list of rules
# Enable all rules
select = ["ALL"]
# Ignore specific rules
# (we should aim to have these as few as possible)
ignore = [
    "D",      # Docstring style rules
    "TD",     # Pedantic TODO comment rules
    "FIX002", # Line contains TODO rule
    "S101",   # Disallow assert statements rule
    "TRY",    # Pedantic exception rules
    "EM",     # Pedantic exception message rules
    "PLR",
    "ARG",
    "C",
    "E",
    "BLE",
    "ANN",
    "PTH",
    "SLF",
    "RUF",
    "PGH",
    "SIM",
    "F",
    "FA",
    "N",
    "A",
    "ISC",
    "PLW",
    "RET",
    # Keep these ignored (either disagreeable or cause issues)
    "COM", # Commas (sometimes takes issue with black formatting)
    "ERA", # Commented out code
]
# Silence complaints when black doesn't format
# lines that are slightly over 88 characters long
line-length = 100

[tool.ruff.isort]
known-first-party = ["icespeak"]
section-order = [
    "future",
    "typehints",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
[tool.ruff.isort.sections]
# Have typing libraries above other imports
typehints = ["typing", "typing_extensions", "types"]

[project.optional-dependencies]
# Dependencies needed to parse text for more in-depth transcribing
parsing = ["tokenizer", "reynir", "islenska"]
# Dev dependencies
dev = [
    "pytest>=7.2.1",
    # Pre-commit hook
    "pre-commit",
    "black",
    "mypy",
    "ruff>=0.0.274",
]

[project.urls]
repository = "https://github.com/mideind/icespeak"

[project.scripts]
speak-cli = "icespeak.cli:main"

# Automatic versioning and build system configuration

[tool.setuptools_scm]
fallback_version = "0.0.0"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"
