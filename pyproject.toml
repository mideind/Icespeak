[project]
name = "icespeak"
# Versioning is automatic (w/setuptools-scm)
dynamic = ["version"]
description = "Icespeak - Icelandic TTS library"
authors = [{ name = "MiÃ°eind ehf.", email = "mideind@mideind.is" }]
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE.txt" }
# For classifier list see: https://pypi.org/pypi?%3Aaction=list_classifiers
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Natural Language :: Icelandic",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    # "aiohttp[speedups]>=3.8.4",
    "requests>=2.31.0",
    "typing-extensions>=4.7.1",
    "pydantic-settings>=2.0.3",
    "cachetools>=5.3.1",
    # For parsing Icelandic text
    "islenska<1.0.0",
    "reynir<4.0.0",
    "tokenizer<4.0.0",
    # Azure TTS
    "azure-cognitiveservices-speech>=1.25.0",
    # Google TTS
    "google-cloud-texttospeech>=2.14.0",
    # AWS Polly TTS
    "botocore>=1.21.40",
    "boto3>=1.18.40",
]

[project.urls]
Repository = "https://github.com/mideind/icespeak"

[project.scripts]
tts = "icespeak.cli:main"

[project.optional-dependencies]
# Needed for CLI interface
cli = ["typer[all]==0.9.0"]
# Dev dependencies
dev = [
    "pytest>=7.2.1",
    "coverage[toml]>=7.3.1",
    "black>=23.7.0",
    "ruff>=0.0.286",
    "pre-commit>=3.3.3",
    "mypy>=1.4.1",
]

# *** Configuration of tools ***

[tool.pytest.ini_options]
filterwarnings = [
    # Ignore deprecation warnings in libraries, their problem not ours
    "ignore::DeprecationWarning",
    # Make sure "error:::icespeak" is always last,
    # as it turns warnings into errors in our code
    "error:::icespeak",
]
markers = [
    # Custom markers (add to SKIP_MARKERS in `tests/conftest.py` to skip by default)
    "network: mark test as communicating with external services",
    "slow: mark test as slow",
]
addopts = "--strict-markers" # Don't allow unrecognized markers (catches typos)


[tool.coverage.run]
branch = true
source = ["icespeak"]
command_line = "-m pytest --run-all"
omit = ["*/icespeak/cli.py"]       # Skip CLI interface

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:", "raise NotImplementedError"]
skip_covered = true                                               # Skip showing fully covered files
skip_empty = true                                                 # Skip empty files
sort = "-Cover"                                                   # Sort by coverage percentage
precision = 2                                                     # Precision of output percentage
fail_under = 65                                                   # Fail if total covered under threshold


[tool.mypy]
overrides = [
    { module = "google.*", ignore_missing_imports = true },
    { module = "azure.*", ignore_missing_imports = true },
]


[tool.pyright]
typeCheckingMode = "strict"
# Some of the following settings are off by default, even in strict mode
reportCallInDefaultInitializer = "information"
reportImplicitOverride = "information"
reportImplicitStringConcatenation = "information"
reportImportCycles = "warning"
reportMissingSuperCall = "none"
reportPropertyTypeMismatch = "warning"
reportUnknownMemberType = "information"
reportUnknownArgumentType = "information"
reportMissingTypeStubs = "information"
reportShadowedImports = "warning"
reportUninitializedInstanceVariable = "information"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedCallResult = "none"


[tool.ruff]
target-version = "py39"
# See https://beta.ruff.rs/docs/rules/ for list of rules
# Enable all rules
select = ["ALL"]
# Ignore specific rules
# (we should aim to have these as few as possible)
ignore = [
    "D",      # Docstring style rules
    "TD",     # Pedantic TODO comment rules
    "FIX002", # Line contains TODO rule
    "FIX004", # Line contains HACK rule
    "S101",   # Disallow assert statements rule
    "TRY",    # Pedantic exception rules
    "EM",     # Pedantic exception message rules
    "PLR",
    "ARG",
    "C",
    "E",
    "BLE",
    "ANN",
    "PTH",
    "SLF",
    "RUF",
    "PGH",
    "SIM",
    "FA",
    "N",
    "A",
    "ISC",
    "PLW",
    "RET",
    # Keep these ignored (either disagreeable or cause issues)
    "COM", # Commas (sometimes takes issue with black formatting)
    "ERA", # Commented out code
]
# Silence complaints when black doesn't format
# lines that are slightly over 88 characters long
line-length = 100

[tool.ruff.isort]
known-first-party = ["icespeak"]
section-order = [
    "future",
    "typehints",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.isort.sections]
# Have typing libraries above other imports
typehints = ["typing", "typing_extensions", "types", "collections.abc"]

# *** Build system configuration ***

[tool.setuptools_scm]
fallback_version = "0.0.0"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"
